#+STARTUP: content
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: chrome-history
#+DATE: [2021-11-30 10:04]
* v8 更新
** v8 => 9.1 2021-05-04
   https://v8.dev/blog/v8-release-91
   - 升级 V8 到 9.1，默认开启 Top-level await
   - 默认开启 WebAssembly SIMD
   - 支持 WebTransport，WebSockets 之外的又一种双向通讯方式，UDP-like datagrams，可取消
   - WebSockets 支持 HTTP/2，可以和其他请求复用一个 TCP 连接，不用单独建一个，从而提升速度
   - ServiceWorker 支持 ES Modules
   - File System Access API 更新，showSaveFilePicker 支持 suggestedName，showOpenFilePicker 支持 startIn
   - Clipboard 接口支持读文件，通过 paste 事件加 e.clipboardData.files 获取
   - 新增 GravitySensor 接口，用于手机游戏研发
   - 禁用端口 10080
   - 支持关联站点共享凭据，通过在 /.well-known/assetlinks.json 声明实现
* chrome 更新
** 107 September 29, 2022
- https://developer.chrome.com/blog/chrome-107-beta/
*** Performance API
#+begin_src js
  // 获取所有资源
  const res = window.performance.getEntriesByType('resource');

  // 过滤出阻塞渲染的资源
  const blocking =   res.filter(({renderBlockingStatus}) =>
        renderBlockingStatus === 'blocking');
#+end_src
** 106 September 27, 2022
- https://developer.chrome.com/blog/new-in-chrome-106/
*** ic css unit
Size of full width glyphs
*** Remove HTTP/2 Server Push
** 105 August 30, 2022
*** css has, container
https://developer.chrome.com/blog/has-with-cq-m105/
~:has()~, ~:not()~, and ~@container~
#+begin_src css
.card:not(:has(.visual)) h2 {
  font-size: clamp(2rem, 15cqi, 4rem);
  font-weight: 300;
}

@container (max-width: 400px) {
  .card:has(.visual) {
    grid-template-columns: 1fr;
  }
}
#+end_src

** 96 2021.11.16
- CaptureTimestamp senderCapture Time, RTCRtpContributingSource 新增属性
- 本地缓存历史页, 下次直接打开(Safari, Firefox 早就支持)
  https://web.dev/bfcache/
- css ~@counter-style~ 描述语音
- 粘贴板支持 Preserve PNG 元数据
- HTTPS DNS Record
- 允许 WebAssembly 模块拥有, 使用, 传递 JS/DOM 对象
- Media Queries: prefers-contrast 
  
*** WebAssembly Reference Types

之前仅支持整数(32, 64 位), 传递复杂数据很困难

之前想传递, 步骤:
1. 字符串转换为证书, 使用 TextEncoder
2. 将整数写入 WebAssembly 内存空间(一个线性的数组空间)
3. 将整数地址传递给 WebAssembly

这些步骤由 wasm-bindgen 来处理, 生成胶水代码. 

之前的更新:
+------------+------+--------------------------------+
|       时间 | 版本 | 特性                           |
+------------+------+--------------------------------+
| 2021.05.25 |   91 | WebAssembly SIMD               |
+------------+------+--------------------------------+
| 2021.10.19 |   95 | WebAssembly Exception Handling |
+------------+------+--------------------------------+
| 2021.11.16 |   96 | WebAssembly Reference Types    |
+------------+------+--------------------------------+

*** HTTPS DNS Record
DNS 记录中返回除了 ip 地址外的额外信息, 是否支持 Https

如果支持则节省一次 http 重定向, 直接跳转 https

*** WebAssembly Dynamic Tiering 试用
V8 层编译优化

V8 有两个编译器负责优化 Liftoff 和 TurboFan

Liftoff one-pass compiler, 读取一遍代码, 然后生成机械码, 提高速度节约时间.
代码无优化, 性能差一点.
https://v8.dev/blog/liftoff
https://segmentfault.com/a/1190000016284865

TurbonFan multi-pass compiler, 会优化.
https://v8.dev/blog/launching-ignition-and-turbofan
https://juejin.cn/post/6844903576402132999

贪婪策略(原先):
1. Liftoff 编译所有代码, 让其可以执行
2. 同时启动 TurboFan 后台线程, 将所有 WebAssembly 函数重新编译一次.
3. 每个编译完成后替换原先的编译结果.

保障了启动速度和执行速度, 但浪费 cpu 和内存.
Dynamic tiering: TurboFan 只编译重复执行的函数. 
*** Refers
- https://mp.weixin.qq.com/s/Hkpf47iwvvBdg9tIojlDAA
- https://chromestatus.com/features#milestone=96

