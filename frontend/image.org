#+STARTUP: all
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: 图片与动画
#+DATE: [2021-07-05 09:49]
* Refers
- https://juejin.cn/post/6844903625731358727
- 性能比较 http://littlesvr.ca/apng/gif_apng_webp5.html
  - 
* 类型
- 无压缩: BMP
  - 无任何压缩, 准确呈现图片
- 无损压缩: PNG
  - 压缩算法进行编码压缩, 保证质量, 降低尺寸
- 有损压缩: JPG
  - 肉眼不可见细节, 大幅度降低尺寸
* gif
- LZW 压缩
  - 基于索引色的图片格式
  - 尺寸小
  - 支持透明和动画
  - 缺点是只存储 8 位索引, 256 种颜色
- 适合 logo, icon, 线框图
* jpg
- 有损
- 直接色
  - 1600 颜色(2^24)
  - 肉眼可识别的颜色只有 1w, 可以移除细节压缩尺寸
* png
** png-8
- 8 位索引色
- gif 同等质量尺寸更小
** png-24
- 无损压缩
- 基于直接色位图, 高品质
* webp
- google 的新图片格式
- 同等视觉体验缩小 30%
- 支持动画, 透明, 有无损压缩
- 暂无得到全面支持, 兼容性一般
* svg
对比 canvas
- 03 年成为 w3c 标准
- 允许矢量, 滤镜动画
- 支持 css
- 用户可交互抽象到 tu
* Base 64
** 概述
简单的编码技术, 用于传输保存二进制数据.

原理是 ASCII 编码为 8 bit , 转换为 6 bit 表示一个单元, 然后末尾用 0 补齐.

因为 64 位可用字符比较少, 可以用有限的编码表示, 但大小会增加. 
** 其他
邮件中 RFC 822 规定, 每 76 个字符带一个回车.

变种, 因为数据问题 ~/~ ~+~ 会被 URLEncode 为 ~%XX~ 形式, 或其他 encode 方式
* 动画 animation
方案对比:
1. css animation
   - 需要依赖帧数图片的下载成功, 容易卡顿
2. 精灵图 + background-position
   - 合成需要精确, 维护性不好, 改动麻烦
3. gif
   - 色彩有限, 边缘杂边, 透明度有限, 压缩后不流畅
4. video
   - 移动端兼容性不好, 需要处理自动播放
5. lottie
   - 包大复杂动画 json 大, 部分动画细节缺失
6. apng
   - 透明, 更多色彩, 体积比 gif 小
   - 兼容性不太好
7. requestAnimationFrame+canvas
8. SMIL

** requestAnimationFrame+canvas 方案实现
steps:
- 请求 apng , 解析所有帧

** svg 动画, SMIL
SMIL Synchronized Multimedia Integration Language 同步多媒体集成语言

主要能力:
- 动画元素数值属性
- 动画属性变换, 平移旋转
- 颜色属性
- 沿轨迹运动, CSS 做不到
*** package
动画库:
- 绘制线图的库 https://github.com/camoconnell/lazy-line-painter
*** css
相关 css 属性,  可以用来做简单的动画:
- stroke-dasharray: 分段, 值越大, 两个 dash 之间的空间越大
- stroke-dashoffset: 延迟, 偏移量

  #+begin_src js
    const path = document.querySelector('.path');
    // 获取总长度
    const totalLength = path.getTotalLength();
  #+end_src
*** svg animation 元素
**** svg 元素
- <svg> 包裹并定义整个矢量图. <svg> 标签之于矢量图就如同 <html> 标签之于一个 web 页面. 
- <line> 创建一条直线. 
- <polyline> 创建折线. 
- <rect> 创建矩形. 
- <ellipse> 创建圆和椭圆. 
- <polygon> 创建多边形. 
- <path> 通过指定点以及点和点之间的线来创建任意形状. 
- <defs> 定义一个可复用的图形. 初始情况下 <defs> 里面的内容是不可见的. <defs> 标签之于矢量图就如同 <head> 标签之于一个 web 页面. 
- <g> 将多种形状组合起来. 将组合后的形状置于 <defs> 中可以让它能够被复用. 
- <symbol> 类似于一个组合，但是拥有一些额外的特性. 通常被置于 <defs> 标签中便于复用. 
- <use> 获取在 <defs> 中定义的复用对象并在 SVG 中显示出来. 

**** 动画元素种类
***** <set>
没有动画, 延迟执行. 

#+begin_src html
  <svg width="320" height="320" xmlns="http://www.w3.org/2000/svg">
    <g> 
      <text font-family="microsoft yahei" font-size="120" y="160" x="160">
        X
        <set attributeName="x" attributeType="XML" to="60" begin="3s" />
      </text>
    </g>
  </svg>
#+end_src
***** <animate>
单属性的动画, 指定一个属性名, 对其进行变化, 可以多个组合.
#+begin_src html
  <svg width="320" height="320" xmlns="http://www.w3.org/2000/svg">
    <g>
      <text font-family="microsoft yahei" font-size="120" y="160" x="160">
        X
        <animate
          attributeName="x"
          from="160"
          to="60"
          begin="0s"
          dur="3s"
          repeatCount="indefinite"
          />
        <animate
          attributeName="fill"
          from="red"
          to="blue"
          begin="0s"
          dur="3s"
          repeatCount="indefinite"
          />
      </text>
    </g>
  </svg>
#+end_src
***** <animateColor> Deprecated
***** <animateTransform>
transition 相关动画只能用这个, 不能用直接用 ~<animate>~

#+begin_src html
  <svg width="320" height="320" xmlns="http://www.w3.org/2000/svg">
    <g> 
      <text font-family="microsoft yahei" font-size="80" y="100" x="100">X</text>
      <animateTransform attributeName="transform" begin="0s" dur="3s"  type="scale" from="1" to="1.5" repeatCount="indefinite"/>
    </g>
  </svg>
#+end_src
***** <animateMotion>
沿路径动画
#+begin_src html
  <svg width="360" height="200" xmlns="http://www.w3.org/2000/svg">
    <text font-family="microsoft yahei" font-size="40" x="0" y="0" fill="#cd0000">X
      <animateMotion path="M10,80 q100,120 120,20 q140,-50 160,0" begin="0s" dur="3s" repeatCount="indefinite"/>
    </text>
    <path d="M10,80 q100,120 120,20 q140,-50 160,0" stroke="#cd0000" stroke-width="2" fill="none" />
  </svg>
#+end_src
**** 属性
***** attributeName
css 属性, 或者 transform
***** attributeType
~CSS/XML/auto~, XML 为
***** from, to, by, values
from, to 起始和终点值, by 可以定义累加偏移值终点值.

values 可以直接定义所有值不需要其他属性. 
***** begin, end
起始和结束时间, 可以用分号决定移动次数, 如 "3s;5s", 未完成动画会强制打断.

默认秒, 其他的 "h"|"min"|"s"|"ms"

还有自定义类别:
- offset-value: "+1s"
- syncbase-value: "id.end"
- event-value:  "id.click"
- repeat-value: "id.repeat(n)"
- accessKey-value: "accessKey(s)" 按键 s
- media-marker-value
- wallclock-sync-value: "1997-07-16T19:20:30.45+01:00"
- "indefinite" 永远
***** dur
***** calcMOde, KeyTimes, keySplines
calcMode: discrete | linear | paced | spline

keyTimes: "0; .8; 1" 进度节点
keySplines: ".5 0 .5 1; 0 0 1 1" 贝塞尔控制点
***** repeatCount, repeatDur
重复次数和重复时长
***** fill
填补间隙: freeze | remove
***** accumulate, additive
***** restart
*** demo
**** bilibili 充电 ui
b 站是通过透明 gif, 控制宽度变化实现的.

hover 时上层, 透明不变, 下层 gif 宽度执行动画从 0 到 最宽.

hover 用户的时候, 细粒状电流, 直接通过 web 执行.

这样实现 bug 少, 体验流畅, 设计还原度高, 性能好

css 动画, 非 svg 动画实现. 效果一般, 还原度低.  
https://juejin.cn/post/6844904121867173902
#+begin_src html
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Document</title>
      <style>
        body {
        margin: 0;
        padding: 0;
        background-color: #eee;
        }
        /* 设置白色容器 */
        #con {
        width: 350px;
        height: 85px;
        background-color: #fff;
        position: relative;
        border-radius: 4px;
        margin: 50px auto;
        }
        /* 设置文本内容容器 */
        #TA-con {
        width: 157px;
        height: 50px;
        background-color: #f25d8e;
        box-shadow: 0 4px 4px rgba(255, 112, 159, 0.3);
        position: absolute;
        top: 50%;
        left: 5%;
        transform: translateY(-50%);
        border-radius: 4px;
        cursor: pointer;
        }
        /* 设置文本居中容器 */
        #text-con {
        width: 100px;
        height: 100%;
        margin: 0 auto;
        position: relative;
        }
        /* 做一个小闪电 */
        #linght {
        width: 0;
        height: 0;
        position: absolute;
        top: 36%;
        left: 4px;
        border-color: transparent;
        border-style: solid;
        border-width: 10px;
        border-top: 10px solid #fff;
        border-radius: 4px;
        transform: rotate(-55deg);
        }
        #linght::after {
        position: absolute;
        top: -13px;
        left: -11px;
        content: "";
        width: 0;
        height: 0;
        border-color: transparent;
        border-style: solid;
        border-width: 10px;
        border-top: 10px solid #fff;
        transform: rotate(180deg);
        border-radius: 4px;
        }
        /* 文字 */
        #TA {
        float: right;
        line-height: 50px;
        font-size: 15px;
        color: #fff;
        }
        #TA-con:hover {
        background-color: #ff6b9a;
        }

        /* 创建图形容器 */
        #tube-con {
        width: 157px;
        height: 55px;
        position: absolute;
        right: -5px;
        top: 15px;
        }
        /* 对svg图形设置宽高 */
        svg {
        width: 100%;
        height: 100%;
        }
        /* 创建一个蒙版 宽度为0，当我hover充电框的时候，宽度展开 */
        #mask {
        width: 0px;
        height: 100%;
        overflow: hidden;
        position: absolute;
        top: 0;
        left: 0;
        transition: all 0.5s;
        }
        /* 对蒙版的sbg单独设置宽高，保证宽度高低有一个固定值而不是百分比 */
        #mask svg {
        width: 157px;
        height: 55px;
        }
        /* 对充电框hover的时候开始动画，将粉色线条铺开 */
        #TA-con:hover + #tube-con > #mask {
        width: 157px;
        }
        /* 对充电框hover的时候开始动画，添加黄色快速移动的动画 */
        #TA-con:hover + #tube-con > #orange-mask {
        animation: move1 0.5s linear 0.2s infinite;
        }
        #TA-con:hover + #tube-con > #orange-mask svg {
        animation: movetwo 0.5s linear 0.2s infinite;
        }
        /* 创建黄色移动的蒙版 */
        #orange-mask {
        width: 18px;
        height: 100%;
        overflow: hidden;
        position: absolute;
        left: -15px;
        top: 0px;
        }
        /* 创建黄色移动的内容 */
        #orange-mask svg {
        position: absolute;
        top: 0;
        left: 15px;
        width: 157px;
        height: 55px;
        }
        @keyframes move1 {
        0% {
        left: -15px;
        }
        100% {
        left: 140px;
        }
        }
        @keyframes movetwo {
        0% {
        left: 15px;
        }
        100% {
        left: -140px;
        }
        }
        #people {
        position: absolute;
        right: 10px;
        top: 8px;
        font-size: 12px;
        font-family: "雅黑";
        color: #aaa;
        }
        #people > b {
        color: #777;
        }
      </style>
    </head>

    <body>
      <div id="con">
        <div id="TA-con">
          <div id="text-con">
            <div id="linght"></div>
            <div id="TA">为TA充电</div>
          </div>
        </div>
        <div id="tube-con">
          <svg
            viewBox="0 0 1028 385"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            >
            <path
              d="M1 77H234.226L307.006 24H790"
              stroke="#e5e9ef"
              stroke-width="20"
              />
            <path
              d="M0 140H233.035L329.72 71H1028"
              stroke="#e5e9ef"
              stroke-width="20"
              />
            <path
              d="M1 255H234.226L307.006 307H790"
              stroke="#e5e9ef"
              stroke-width="20"
              />
            <path
              d="M0 305H233.035L329.72 375H1028"
              stroke="#e5e9ef"
              stroke-width="20"
              />
            <rect y="186" width="236" height="24" fill="#e5e9ef" />
            <ellipse cx="790" cy="25.5" rx="25" ry="25.5" fill="#e5e9ef" />
            <circle r="14" transform="matrix(1 0 0 -1 790 25)" fill="white" />
            <ellipse cx="790" cy="307.5" rx="25" ry="25.5" fill="#e5e9ef" />
            <circle r="14" transform="matrix(1 0 0 -1 790 308)" fill="white" />
          </svg>
          <div id="mask">
            <svg
              viewBox="0 0 1028 385"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              >
              <path
                d="M1 77H234.226L307.006 24H790"
                stroke="#f25d8e"
                stroke-width="20"
                />
              <path
                d="M0 140H233.035L329.72 71H1028"
                stroke="#f25d8e"
                stroke-width="20"
                />
              <path
                d="M1 255H234.226L307.006 307H790"
                stroke="#f25d8e"
                stroke-width="20"
                />
              <path
                d="M0 305H233.035L329.72 375H1028"
                stroke="#f25d8e"
                stroke-width="20"
                />
              <rect y="186" width="236" height="24" fill="#f25d8e" />
              <ellipse cx="790" cy="25.5" rx="25" ry="25.5" fill="#f25d8e" />
              <circle r="14" transform="matrix(1 0 0 -1 790 25)" fill="white" />
              <ellipse cx="790" cy="307.5" rx="25" ry="25.5" fill="#f25d8e" />
              <circle r="14" transform="matrix(1 0 0 -1 790 308)" fill="white" />
            </svg>
          </div>
          <div id="orange-mask">
            <svg
              viewBox="0 0 1028 385"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              >
              <path
                d="M1 77H234.226L307.006 24H790"
                stroke="#ffd52b"
                stroke-width="20"
                />
              <path
                d="M0 140H233.035L329.72 71H1028"
                stroke="#ffd52b"
                stroke-width="20"
                />
              <path
                d="M1 255H234.226L307.006 307H790"
                stroke="#ffd52b"
                stroke-width="20"
                />
              <path
                d="M0 305H233.035L329.72 375H1028"
                stroke="#ffd52b"
                stroke-width="20"
                />
              <rect y="186" width="236" height="24" fill="#ffd52b" />
              <ellipse cx="790" cy="25.5" rx="25" ry="25.5" fill="#ffd52b" />
              <circle r="14" transform="matrix(1 0 0 -1 790 25)" fill="white" />
              <ellipse cx="790" cy="307.5" rx="25" ry="25.5" fill="#ffd52b" />
              <circle r="14" transform="matrix(1 0 0 -1 790 308)" fill="white" />
            </svg>
          </div>
          <p id="people">共 <b>0</b> 人</p>
        </div>
      </div>
    </body>
  </html>
#+end_src

**** 进度条 circle
#+begin_src html
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <meta http-equiv="X-UA-Compatible" content="ie=edge" />
      <title>Static Template</title>
    </head>
    <style>
      circle {
      -webkit-transition: stroke-dasharray 0.25s;
      transition: stroke-dasharray 0.25s;
      }
    </style>
    <body>
      <svg width="440" height="440" viewbox="0 0 440 440">
        <circle
          cx="220"
          cy="220"
          r="170"
          stroke-width="50"
          stroke="#D1D3D7"
          fill="none"
          ></circle>
        <circle
          cx="220"
          cy="220"
          r="170"
          stroke-width="50"
          stroke="#00A5E0"
          fill="none"
          transform="matrix(0,-1,1,0,0,440)"
          stroke-dasharray="0 1069"
          ></circle>
      </svg>
      <p>
        拖我：<input
                id="range"
                type="range"
                min="0"
                max="100"
                value="0"
                style="width: 300px;"
                />
      </p>
    </body>
    <script>
      if (window.addEventListener) {
      var range = document.querySelector("#range"),
      circle = document.querySelectorAll("circle")[1];
      if (range && circle) {
      range.addEventListener("change", function () {
      var percent = this.value / 100,
      perimeter = Math.PI * 2 * 170;
      circle.setAttribute(
      "stroke-dasharray",
      perimeter * percent + " " + perimeter * (1 - percent)
      );
      });
      }
      }
    </script>
  </html>
#+end_src

**** svg 动画 flowing
#+begin_src html
  <svg
    xmlns="http://www.w3.org/2000/svg"
    style="
           margin: auto;
           background: transparent;
           display: block;
           z-index: 1;
           position: relative;
           "
    width="2480"
    height="841"
    preserveAspectRatio="xMidYMid"
    viewBox="0 0 2480 841"
    >
    <g transform="translate(1240,420.5) scale(1,1) translate(-1240,-420.5)">
      <linearGradient id="lg-0.2519962050414528" x1="0" x2="1" y1="0" y2="0">
        <stop stop-color="#8154e8" offset="0"></stop>
        <stop stop-color="#47bc99" offset="1"></stop>
      </linearGradient>
      <path d="" fill="url(#lg-0.2519962050414528)" opacity="0.7">
        <animate
          attributeName="d"
          dur="20s"
          repeatCount="indefinite"
          keyTimes="0;0.333;0.667;1"
          calcmod="spline"
          keySplines="0.2 0 0.2 1;0.2 0 0.2 1;0.2 0 0.2 1"
          begin="0s"
          values="M0 0M 0 782.0642762329601Q 248 734.9179190877288 496 733.3616803110173T 992 662.0067877821964T 1488 656.7013406319596T 1984 606.1744849184307T 2480 649.5736446593223L 2480 229.388631502972Q 2232 253.69688648287206 1984 249.6701709197495T 1488 223.5673919336586T 992 188.5947119266939T 496 146.17153296624528T 0 132.8400305022157Z;M0 0M 0 758.7756840601196Q 248 700.6894297638441 496 699.822252897383T 992 726.2370054137564T 1488 621.4294065631416T 1984 615.4702165485671T 2480 576.0936539631895L 2480 262.54824152074036Q 2232 207.15328220612727 1984 202.96850347920585T 1488 174.50830722194394T 992 95.47972977490835T 496 106.63680628428384T 0 106.91801904156131Z;M0 0M 0 787.3091541898573Q 248 781.7000550366971 496 774.7372415871978T 992 687.8841005261113T 1488 709.9290992461333T 1984 678.8041095842166T 2480 655.1921807350019L 2480 245.09483950857575Q 2232 187.49650819954397 1984 180.5844219545101T 1488 145.31480948425963T 992 137.11042267660753T 496 67.20583260415583T 0 68.89856452320424Z;M0 0M 0 782.0642762329601Q 248 734.9179190877288 496 733.3616803110173T 992 662.0067877821964T 1488 656.7013406319596T 1984 606.1744849184307T 2480 649.5736446593223L 2480 229.388631502972Q 2232 253.69688648287206 1984 249.6701709197495T 1488 223.5673919336586T 992 188.5947119266939T 496 146.17153296624528T 0 132.8400305022157Z"
          ></animate>
      </path>
      <path d="" fill="url(#lg-0.2519962050414528)" opacity="0.7">
        <animate
          attributeName="d"
          dur="20s"
          repeatCount="indefinite"
          keyTimes="0;0.333;0.667;1"
          calcmod="spline"
          keySplines="0.2 0 0.2 1;0.2 0 0.2 1;0.2 0 0.2 1"
          begin="-5s"
          values="M0 0M 0 715.5429584691205Q 248 754.1478320759364 496 749.5066478542201T 992 653.6032713279848T 1488 713.5055747916927T 1984 601.1429382012893T 2480 579.5522352519544L 2480 243.41761150120553Q 2232 224.85487943223458 1984 217.5759999294464T 1488 133.83122226429515T 992 129.43434456205827T 496 118.58894231522333T 0 54.38111141615673Z;M0 0M 0 736.6666018459832Q 248 759.9837473037021 496 758.0344632756245T 992 665.133362931133T 1488 676.9114930979285T 1984 604.1461171932574T 2480 611.8420711934679L 2480 211.5767266139486Q 2232 223.01941676244195 1984 213.2319005401224T 1488 161.97076313160238T 992 133.1757177303918T 496 111.85050854660778T 0 47.267405052738695Z;M0 0M 0 741.1056837288857Q 248 743.269947621374 496 734.1033677677277T 992 681.3963460023904T 1488 616.0858410466112T 1984 592.0848173837907T 2480 625.5580387716093L 2480 192.36205855879356Q 2232 187.58806598392522 1984 182.5301818145887T 1488 125.26742421045667T 992 106.3875781353056T 496 147.9917049984667T 0 85.18865937898269Z;M0 0M 0 715.5429584691205Q 248 754.1478320759364 496 749.5066478542201T 992 653.6032713279848T 1488 713.5055747916927T 1984 601.1429382012893T 2480 579.5522352519544L 2480 243.41761150120553Q 2232 224.85487943223458 1984 217.5759999294464T 1488 133.83122226429515T 992 129.43434456205827T 496 118.58894231522333T 0 54.38111141615673Z"
          ></animate>
      </path>
      <path d="" fill="url(#lg-0.2519962050414528)" opacity="0.7">
        <animate
          attributeName="d"
          dur="20s"
          repeatCount="indefinite"
          keyTimes="0;0.333;0.667;1"
          calcmod="spline"
          keySplines="0.2 0 0.2 1;0.2 0 0.2 1;0.2 0 0.2 1"
          begin="-10s"
          values="M0 0M 0 720.3823170625064Q 248 726.8962880490819 496 723.7301603591279T 992 649.6807689441314T 1488 673.7645101673145T 1984 672.7447848360762T 2480 570.5444101247659L 2480 250.95408721423556Q 2232 209.4133628433847 1984 203.6297064478496T 1488 197.5046951410065T 992 165.7686160835034T 496 156.53484155184955T 0 97.36986552363427Z;M0 0M 0 724.3962084227351Q 248 769.1299274508185 496 768.4830171846951T 992 655.4212637971035T 1488 617.6098643556762T 1984 675.6001436637315T 2480 578.6555149618548L 2480 207.30644409362088Q 2232 246.78374417643633 1984 242.78555550854023T 1488 165.13498315228884T 992 155.29938452351067T 496 153.48119397033244T 0 120.6165910277295Z;M0 0M 0 786.7498587874586Q 248 694.8904525315791 496 694.7859065263139T 992 741.9007401162123T 1488 712.7427018330851T 1984 600.771387610264T 2480 560.9341255603665L 2480 225.95438349701095Q 2232 186.20731855137916 1984 185.02902415963018T 1488 183.6097058877093T 992 97.76892948528908T 496 92.84315936525135T 0 91.7830080123826Z;M0 0M 0 720.3823170625064Q 248 726.8962880490819 496 723.7301603591279T 992 649.6807689441314T 1488 673.7645101673145T 1984 672.7447848360762T 2480 570.5444101247659L 2480 250.95408721423556Q 2232 209.4133628433847 1984 203.6297064478496T 1488 197.5046951410065T 992 165.7686160835034T 496 156.53484155184955T 0 97.36986552363427Z"
          ></animate>
      </path>
      <path d="" fill="url(#lg-0.2519962050414528)" opacity="0.7">
        <animate
          attributeName="d"
          dur="20s"
          repeatCount="indefinite"
          keyTimes="0;0.333;0.667;1"
          calcmod="spline"
          keySplines="0.2 0 0.2 1;0.2 0 0.2 1;0.2 0 0.2 1"
          begin="-15s"
          values="M0 0M 0 707.1385046152416Q 248 741.154130909628 496 738.9494749733625T 992 680.4349662709988T 1488 617.1455889417254T 1984 639.7913544337896T 2480 579.3831447517819L 2480 274.1830892684144Q 2232 237.13097793198264 1984 234.97879405783814T 1488 168.62421084767675T 992 103.70717309587539T 496 163.5458162591336T 0 98.18670940975551Z;M0 0M 0 710.4156618893423Q 248 759.6720480963229 496 753.5903378382793T 992 722.5914652612204T 1488 690.5105416654412T 1984 585.3597061496537T 2480 623.4823777900987L 2480 185.48684563678975Q 2232 165.47379669917476 1984 163.10759633822462T 1488 141.10763304431538T 992 151.5897552874598T 496 69.38324077133359T 0 36.6003141028051Z;M0 0M 0 772.8403900774404Q 248 719.1140117513448 496 712.2983771219039T 992 743.7832066519325T 1488 695.6260868332281T 1984 610.7382822891122T 2480 572.4175511985597L 2480 216.06056419019376Q 2232 227.29850541273373 1984 225.07843726404624T 1488 132.28246999492183T 992 126.29068456374628T 496 126.07589605862685T 0 107.88023817804111Z;M0 0M 0 707.1385046152416Q 248 741.154130909628 496 738.9494749733625T 992 680.4349662709988T 1488 617.1455889417254T 1984 639.7913544337896T 2480 579.3831447517819L 2480 274.1830892684144Q 2232 237.13097793198264 1984 234.97879405783814T 1488 168.62421084767675T 992 103.70717309587539T 496 163.5458162591336T 0 98.18670940975551Z"
          ></animate>
      </path>
    </g>
  </svg>
#+end_src
