#+STARTUP: all
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: vue3
#+DATE: [2020-11-17 03:03]
* Referrs
- https://github.com/cuixiaorui/mini-veu
- https://github.com/HcySunYang/vue-design
- https://codepen.io/collection/DkxpbE
- https://vue3js.cn/interview/
* setup
* svg
#+begin_src typescript
  createElement: (tag, isSVG, is): Element =>
    isSVG
    ? doc.createElementNS(Svgns, tag)
    : doc.createElement(tag, is ? { is } : undefined)
#+end_src
vue 3.0 中每个没次执行或者获取元素都需要判断是否是 svg 元素。
命名空间主要是为了解决存储文件信息的问题，而文件后缀名如果长的话会很不方便。
有了命名空间，可以用来存储相对较长的信息，然后暴露更短的词缀，简洁的在不同类型的文本中使用。  
svg 是有自己命名空间的数据解构，还有 MathML 等。他们可以被嵌入到 HTML5 中。所以要 ~createElementNS~ 创建所元素。

有效的命名空间 URI
- HTML - 参阅 http://www.w3.org/1999/xhtml
- SVG - 参阅 http://www.w3.org/2000/svg
- XBL - 参阅 http://www.mozilla.org/xbl
- XUL - 参阅 http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul

** 相关资料
    
[[https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS]]
[[https://stackoverflow.com/questions/8173217/createelement-vs-createelementns]]
   
   
* Core
从 ~Reactivity~ 看起, 无耦合模块. 

* proxy
完全代理所有属性, 包括新增对象元素, 节省性能损耗,
