#+STARTUP: all
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: decorator
#+DATE: [2023-02-13 10:51]
* Refers
* Timeline
** TC39
- 2022-03 stage 3
- 2021-12 proposal
** Babel
- 7.19.0 support stage 3

#+begin_src js
  {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ]
    ],
    "plugins": [
      ["@babel/plugin-proposal-decorators", { "version": "2022-03" }] // 这个地方要配置，因为当前默认的版本不是最新的
    ]
  }
#+end_src
* Usage
** extends class
type
#+begin_src js
  type ClassMethodDecorator = (value: Function, context: {
    kind: "method";
    name: string | symbol;
    access: { get(): unknown };
    static: boolean;
    private: boolean;
    addInitializer(initializer: () => void): void;
  }) => Function | void;
#+end_src
demo
#+begin_src js
  function addRunMethod(value, { kind, name }) {
    if (kind === "class") {
      return class extends value {
        constructor(...args) {
          super(...args);
        }
        run() {
          console.log(`Add a run method for ${this.name}`);
        }
      }
    }
  }

  @addRunMethod
  class Person {
    constructor(name) {
      this.name = name
    }
  }

  const p1 = new Person('Tom')
  p1.run()
  const p2 = new Person('Jack')
  p2.run()
#+end_src
