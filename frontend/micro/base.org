#+STARTUP: content
#+CREATED: [2021-07-12 11:10]
* base
** Refers
   - https://mp.weixin.qq.com/s/Xb-P9ubzrXGmtTE8xhK8TQ
** 背景
*** 需求
    - 主应用, 与多个子应用并存
      - 子应用允许内嵌其他子应用
    - 应用间隔离, 独立上线
      - 子应用发布和上线, 不需要修改主应用代码
    - 框架, 沙盒
*** 实现问题
    - 注入加载入口脚本, 控制版本
    - 上线流程, 回滚和灰度
    - 子应用独立上线且主应用响应
    - 集成版本联调
** 细节实现
*** 难点划分
    - 环境治理
      - 上线, 私有化, 发布, 回滚, 灰度等
      - 版本管理, 依赖管理
    - 运行时容器和通信
      - 应用加载, 生命周期
      - 沙箱隔离, 异常处理
      - 路由同步, 应用通信
    - 开发模式
      - 本地开发, 联调, 发布
      - 脚手架, 开发者工具
    - 通用物料
      - 通用微前端函数, 插件, 控件
*** 治理体系

    上线平台, 负责管理父应用入口产物(html, 或者 js)文件.
    通过当前的获取当前所有子应用 map, 对应灰度规则或者小流量, 生成产物.
*** 开发
    子应用转发本地接口, 访问线上入口. 

*** 微物料
    按需提效, 优先度最低

*** 运行时

**** 快照
     启动子应用前存一份全局数据快照, 卸载子应用后恢复.

     不足:
     - 子应用共存时会有问题
     - 不够严谨, 深拷贝有问题

**** 沙箱
     方案:
     - Wasm VM
       - 隔离太严格, 会产生很大的通信开销
     - with + new Function + Proxy
       - with 控制作用域链路, 对 window 的访问
       - function 控制作用域访问, 还是避免全局变量和作用域
       - Proxy 全局 API 的拦截
       - 通过  ~iframe.contentWindow~ 来代替实现 window 的深拷贝
