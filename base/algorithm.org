#+STARTUP: content
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: algorithm
#+DATE: [2021-11-19 02:49]
* Refers
- OI（Olympiad in Informatics，信息学奥林匹克竞赛） https://oi-wiki.org/ https://github.com/OI-wiki/OI-wiki/

* 基础

除法中，负数元算的余数和商也会是负数。
可以用在等比数列对应二进制的运算中。
   
#+begin_src python
  -3 // -2
  # Output 1
  3 // -2
  # Output -1

  3 % -2
  # Output -1
  -3 % -2
  # Output -1

  1 // -2
  # Output -1
  1 // 2
  # Output 0
#+end_src

* Trie 字典树 单词查找树
特征:
1. 根节点不包含字符, 除根节点外的每一个子节点都包含一个字符(可以理解成边含字符)
2. 从根节点到某一节点, 路径上经过的字符连接起来, 就是该节点对应的字符串. 
3. 每个单词的公共前缀作为一个字符节点保存
   
总结: 相对 Hash, Trie 占用空间少, 查询效率高

* DFA Deterministic Finite Automaton 确定有穷自动机.

有一个有限状态集合和一些从一个状态通向另一个状态的边, 每条边上标记有一个符号.
其中一个状态是初态, 某些状态是终态.
但不同于不确定的有限自动机, DFA 中不会有从同一状态出发的两条边标志有相同的符号.

基于字典树查询. 
