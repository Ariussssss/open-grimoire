#+STARTUP: all
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: js ninja
#+DATE: [2021-06-30 14:07]
* Refers
* !~ 对 indexof 判定
* for of
  同步循环的迭代器 iterables 和生成器 generators, 对结果处理

  #+begin_src js
    function* generator() {
      yield 0;
      yield 1;
      yield Promise.resolve(2);
      yield Promise.resolve(3);
      yield 4;
    }

    (async function() {
      for await (let num of generator()) {
	console.log(num);
      }
    })();
    // 0
    // 1
    // 2
    // 3
    // 4

    // compare with for-of loop:

    for (let numOrPromise of generator()) {
      console.log(numOrPromise);
    }
    // 0
    // 1
    // Promise { 2 }
    // Promise { 3 }
    // 4
  #+end_src

  遇到 reject 会跳过后续直接 throw
  #+begin_src js
    function* generator() {
      yield 0;
      yield 1;
      yield Promise.resolve(2);
      yield Promise.reject(3).finally(() => {console.log('finally')});
      yield 4;
    }

    (async function() {
      for await (let num of generator()) {
	console.log(num);
      }
    })();
    // 0
    // 1
    // 2
    // finally
    // Promise {<rejected>: 3}
    // >  Uncaught (in promise) 3
  #+end_src
* clearTimeout
   ~clearTimeout~  只是把回调事件从定时器队列中移除, 并没有改变他的变量.

   判空需要先清空. 
* download
  #+begin_src js
    var a = document.createElement('a');
    var url = window.URL.createObjectURL(blob);
    var filename = 'what-you-want.txt';
    a.href = url;
    a.download = filename;
    a.click();
    window.URL.revokeObjectURL(url);
  #+end_src
  
