#+STARTUP: content
* thread
** Refers
** 线程安全
   线程共享内存, 需要保证堆上的东西不产生预料之外的修改
*** 维护
    - 私有内存栈内置
    - 控制允许使用范围
    - 地址只读, 统一写, 使用复制
    - 声明使用, 互斥锁
    - CAS（Compare And Swap）, 记录上次起始 commit, 比对没变化就继续, 有变化就重新
      适用于线程少情况


    思路大致分类为隔离(数据, 内存), 标记(只读, 上锁), 乐观锁(要么是我上次的, 要么重新来)
