#+STARTUP: all
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: music
#+DATE: [2023-12-13 04:39]
* Refers
* Controller and player
#+begin_src bash
  sudo dnf install mpv-mpris mpv playerctl
  ln -s /usr/lib/mpv/mpris.so $HOME/.config/mpv/scripts/mpris.so
  # check
  playerctl --list-all
  playerctl metadata title
#+end_src
* Export playlist
** Spotify
- https://developer.spotify.com/dashboard
- https://github.com/spotipy-dev/spotipy/tree/master/examples

#+begin_src python
  import spotipy
  from spotipy.oauth2 import SpotifyOAuth

  scope = 'playlist-read-private'
  sp = spotipy.Spotify(auth_manager=SpotifyOAuth(
      client_id=CLIENT_ID, 
      client_secret=CLIENT_SECRET, 
      redirect_uri=REDIRECT_URI,
      scope=scope))
  results = sp.current_user_playlists(limit=50)
#+end_src
** Netease
*** API
https://docs.neteasecloudmusicapi.binaryify.com/

*** MAC local DB
#+begin_src bash
  sqlite3 ~/Library/Containers/com.netease.163music/Data/Documents/storage/sqlite_storage.sqlite3
#+end_src

#+begin_src sql
  select * from web_playlist where playlist like '%<your uid>%'
  -- loop or join
  select * from web_playlist_track where pid = <playlist id>
#+end_src

* Search and download
** YouTube
~download_archive~ must be a filename, can be a soft link.
#+begin_src python
    from youtube_search import YoutubeSearch
    from yt_dlp import YoutubeDL
    os.environ['http_proxy'] = "http://127.0.0.1:7890" 
    os.environ['https_proxy'] = "http://127.0.0.1:7890" 

    ...
    res = YoutubeSearch(search_name, max_results=5).to_dict()
    for item in res:
        item['url'] = 'https://www.youtube.com' + item['url_suffix']
    ...
    with YoutubeDL(
            {
                "download_archive": 'download_archive.txt',
                "retry-sleep": 2,
                "outtmpl": f"{playlist}/%(title)s.%(ext)s",
            }
    ) as ydl:
        ydl.download([url])
#+end_src
** bilibili
https://nemo2011.github.io/bilibili-api/#/examples/video

Need a bot account
* emacs emms
Set up for mpv
#+begin_src lisp
  (require 'emms-setup)
  (require 'emms-player-mpv)
  (add-to-list 'emms-player-list 'emms-player-mpv)
  (setq emms-player-mpv-parameters 
        '("--quiet" "--really-quiet" "--volume=40"))
#+end_src
Communicate with shell.
#+begin_src bash
  emacsclient -e "(emms-toggle-repeat-track)"
#+end_src
* mpv
Keybindings
https://github.com/mpv-player/mpv/blob/master/etc/input.conf
** reverb
Same with ~ffmpeg~
#+begin_src bash
  ffmpeg.exe -i input.mp4 -map 0 -c:v copy -af aecho=1.0:0.7:20:0.5 reverb.mp4
  mpv input.mp4 -af aecho=1.0:0.7:20:0.5
#+end_src
aecho parameters:
- 1.0 - Overall volume. Leave this at 1.0 or the whole audio track will be quiet.
- 0.7 - Volume of the echo effect as a percent.
- 20 - ms to delay echo. If you want reverb, this value should be between 10 (warm) and 50 (echo chamber reverb). Don't go beyond 50 or it will turn into a cave-like echo.
- 0.5 - Leave the decay at the default of 0.5
