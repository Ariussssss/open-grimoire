#+STARTUP: content
#+SETUPFILE: ~/.emacs.d/org-styles/html/main.theme
#+TITLE: kenel
#+DATE: [2021-12-22 10:30]
* Refers
- https://github.com/sunym1993/flash-linux0.11-talk
- http://kernel.meizu.com/linux-workqueue.html
* worker queue
主要利用进程上下文处理内核中大量任务. 
一般小型任务不会起自己线程, 扔给 worker queue 处理. 

并行, 多 work 不阻塞, 节省资源, 多个 work 共享资源(进程, 调度, 内存)

* kworker Kernel Worker
查看  ~ps -ef|grep kworker~ 

格式  ~kworker/%u:%d%s~ , sample:  ~kworker/8:3+events~,  ~kworker/u22:3-vblk_req_wq0~

- 其中 u 是 unbound, 代表没绑定 CPU
  - 不带 u 为特定 cpu 的 worker
- 然后是 work_pool ID

* CMWQ Concurrency Managed Workqueue
最新的 workerqueue 实现.

概念:
- work
- workqueue
- worker
- worker_pool
- pwq pool_workqueue,  建立 wq 和 wp 之间的关系
  - wq 1:N pwq, pwq 1:1 wp


#+DOWNLOADED: screenshot @ 2022-04-13 18:53:31
[[file:images/20220413-185331_screenshot.png]]

* coredump
core dump 是程序在被操作系统杀掉以后, 保留的一份内存快照.

#+begin_src bash
  >:~$ sysctl kernel.core_pattern
  kernel.core_pattern = |/usr/share/apport/apport %p %s %c %d %P %E
#+end_src

